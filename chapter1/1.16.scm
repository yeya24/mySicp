(define (fast-expt b n)
  (fast-expt-iter b n 1)
)

(define (square x) (* x x))
(define (fast-expt-iter b n a)
  (cond ((= n 0) 1)
    ((= n 1) (* b a))
    ((even? n) (fast-expt-iter (square b) (/ n 2) a))
    (else (fast-expt-iter b (- n 1) (* a b)))
  )
)